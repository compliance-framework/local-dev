apiVersion: v1
kind: ConfigMap
metadata:
  name: plugin-k8s-native-config
data:
  config.yaml: |
    daemon: false
    verbosity: 2

    api:
      url: http://host.minikube.internal:8080

    plugins:
      k8s-native:
        source: ghcr.io/compliance-framework/plugin-k8s-native:v0.0.3
        policies:
          - ghcr.io/compliance-framework/plugin-k8s-native-policies:latest
        labels:
          type: aws
          service: ec2

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: plugin-k8s-native
  labels:
    app: plugin-k8s-native
spec:
  replicas: 1
  selector:
    matchLabels:
      app: plugin-k8s-native
  template:
    metadata:
      labels:
        app: plugin-k8s-native
    spec:
      initContainers:
      - name: ghcr-login
        image: golang:1.23.2
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Cleaning GitHub credentials..."
            export CLEAN_GITHUB_USERNAME=$(echo "$GITHUB_USERNAME" | tr -d '\n' | tr -d '\r')
            export CLEAN_GITHUB_TOKEN=$(echo "$GITHUB_PAT" | tr -d '\n' | tr -d '\r')

            echo "Configuring git credentials..."
            git config --global url."https://${CLEAN_GITHUB_USERNAME}:${CLEAN_GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

            echo "Installing gooci..."
            go install github.com/compliance-framework/gooci@latest

            echo "Setting PATH and logging into GHCR..."
            export PATH=$PATH:/go/bin
            gooci login ghcr.io --username "$CLEAN_GITHUB_USERNAME" --password "$CLEAN_GITHUB_TOKEN"
        env:
          - name: GITHUB_USERNAME
            valueFrom:
              secretKeyRef:
                name: ghcr-login-secret
                key: GITHUB_USERNAME
          - name: GITHUB_PAT
            valueFrom:
              secretKeyRef:
                name: ghcr-login-secret
                key: GITHUB_PAT

      containers:
        - name: agent
          image: ghcr.io/compliance-framework/agent:v0.0.15
          imagePullPolicy: Always
          volumeMounts:
            - name: config-volume
              mountPath: /etc/plugin/config.yaml
              subPath: config.yaml
          command: ["/bin/agent", "agent"]
          args: ["-c", "/etc/plugin/config.yaml"]
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: "500m"
              memory: "256Mi"
            requests:
              cpu: "250m"
              memory: "128Mi"
      volumes:
        - name: config-volume
          configMap:
            name: plugin-k8s-native-config
      restartPolicy: Always
